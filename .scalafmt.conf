# Scala Format Configuration
version = 3.7.11
runner {
  dialect = scala3
}

# Foramtting options

maxColumn                       = 120 # Using IntelliJ 's marker line
includeNoParensInSelectChains   = false
includeCurlyBraceInSelectChains = true
importSelectors                 = binPack

optIn {
  annotationNewlines          = true
  breakChainOnFirstMethodDot  = false
  encloseClassicChains        = true
}

align {
  preset                    = more
  stripMargin               = true
  arrowEnumeratorGenerator  = true
  openParenCallSite         = true
  openParenDefnSite         = true
  openParenCtrlSite         = true
  closeParenSite            = true
  multiline                 = true
  allowOverflow             = true
  inInterpolation           = false
  tokens."+"                = [
    {
      code: ":"
      owners = [
        {
          regex = "Term\\.|Enumerator\\.Val|Defn\\.|Def|Type\\."
        }
      ]
    },
    {
      code: "="
      owners = [
        {
          regex = "Term\\.|Enumerator\\.Val|Defn\\.|Def|Type\\."
        }
      ]
    }
  ]
}

newlines {
  inInterpolation                         = avoid
  beforeMultiline                         = fold
  forceBeforeMultilineAssign              = never
  beforeTypeBounds                        = fold
  beforeCurlyLambdaParams                 = multilineWithCaseOnly
  alwaysBeforeElseAfterCurlyIf            = false
  afterCurlyLambdaParams                  = squash
  implicitParamListModifierPrefer         = before
  avoidForSimpleOverflow                  = [ tooLong, punct, slc ]
  avoidInResultType                       = true
  sometimesBeforeColonInMethodReturnType  = false
}

danglingParentheses {
  defnSite = false
  callSite = true
  ctrlSite = false
}

runner {
  optimizer {
    forceConfigStyleMinArgCount = 5
  }
}

rewrite {
  redundantBraces {
    stringInterpolation   = true
    ifElseExpressions     = true
    generalExpressions    = true
    defnBodies            = noParams
    methodBodies          = true
    includeUnitMethods    = true
    parensForOneLineApply = true
  }
  preferCurlyFors {
    removeTrailingSemicolonsOnly = false
  }
  trailingCommas {
    style = never
  }
  rules = [
    #AvoidInfix,
    RedundantBraces,
    SortModifiers,
    PreferCurlyFors
  ],
  allowInfixPlaceholderArg = true
}

comments {
  wrap                    = trailing
  wrapStandaloneSlcAsSlc  = true
  wrapSingleLineMlcAsSlc  = true
}

docstrings {
  style                 = SpaceAsterisk
  removeEmpty           = true
  oneline               = unfold
  blankFirstLine        = yes
  wrap                  = yes
  forceBlankLineBefore  = true
}

project {
  git = true
}

spaces {
  beforeContextBoundColon         = IfMultipleBounds
  inInterpolatedStringCurlyBraces = false
  inImportCurlyBraces             = false
  inParentheses                   = false
}

literals {
  long        = Upper
  float       = Upper
  double      = Upper
  hexPrefix   = Lower
  hexDigits   = Upper
  scientific  = Lower
}

rewriteTokens = {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}

indent {
  matchSite             = 2
  caseSite              = 5
  relativeToLhsLastLine = [ match, infix ]
}

indentOperator {
  exemptScope = aloneArgOrBody
}